## DW original version
##language: cpp
##compiler: clang
##install:
##  - sudo apt-get install libboost-program-options-dev
##before_script:
##  - mkdir build
##  - curl https://bitbucket.org/eigen/eigen/get/3.2.4.tar.gz | tar xz
##  - mv eigen-eigen-10219c95fe65/Eigen/ Eigen/
##  - cd third-party/bamtools/build && cmake .. && make
#
##script:
##    - cd /home/travis/build/dwinter/accuMUlate/build/
##    - cmake -DBamtools_PREFIX=../third-party/bamtools/ ..
##    - make
#
#
### Update version with cache
#
language: cpp
sudo: false
compiler:
  - gcc
  - clang
# Change this to your needs 
addons:
  apt:
    sources:
#      - deadsnakes
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise
      - llvm-toolchain-precise-3.6
    packages:
      - gcc-4.9
      - g++-4.9
      - clang-3.6
      - llvm-3.6   
env:
  global:
    - USE_CCACHE=1

before_install:
  -  ls -l $HOME
  - pwd
  - ls -l `pwd`
## disable all sudo for container 
#  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test  
#  - sudo apt-get update -qq
install:
###  - sudo apt-get install -y libboost-all-dev
###  - sudo apt-get install -y libeigen3-dev 
##  - sudo apt-get install -qq gcc-4.8 g++-4.8 
##  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 90
before_script:
    - echo $HOME
    - cat $HOME/build.sh
    - echo $TRAVIS
    - ls -l $HOME/.ccache
    - ls -l $HOME/
    - ls -l $HOME/include/
    - ls -l $HOME/lib/
    - ./travis_rebuild_cache.sh
    - ls -l $HOME/build/
    - ls -l $HOME/include/
    - ls -l $HOME/lib/
#    - if grep -Fxq "#define BOOST_VERSION 105800" $HOME/include/boost/version.hpp;then  echo "YES";else  echo "NO, rebuild BOOST";fi
#
#    - mkdir -p  build/boost_install
#    - wget -qO- http://downloads.sourceforge.net/project/boost/boost/1.58.0/boost_1_58_0.tar.bz2 | tar xj -C build/boost_install/
#    - pwd && ls && ls build && ls build/boost_install && ls build/boost_install/boost_1_58_0
#    - cd build/boost_install/boost_1_58_0 && ./bootstrap.sh --with-libraries=program_options,thread,system 
#    - ./b2 install -d0 --prefix=$HOME/ && cd ../../..
#    - ls -l $HOME/lib/
#    - mkdir build/eigen
#    - wget -qO- http://bitbucket.org/eigen/eigen/get/3.2.4.tar.bz2 | tar xj -C build/eigen/ --strip-components 1 
#    - cd build/eigen && mkdir build_dir && cd build_dir 
#    - cmake .. -DCMAKE_INSTALL_PREFIX=$HOME/ && make install && cd ../../..
#    - ls -l $HOME/
#    - ls -l $HOME/include/
#    - ls -l $HOME/lib/
#    - cd build/eigen
#    - pwd && ls
#    - cp -r Eigen $HOME/lib/eigen/
#    - git clone git://github.com/pezmaster31/bamtools.git
#    - cd bamtools && mkdir build && cd build && cmake .. && make
#    - pwd
#    - cd ../.. && mkdir -p lib/bamtools
#    - ls
#    - cd lib/bamtools
#    - pwd
#    - ln -s bamtools/lib/* .
#     - ls -l $HOME/build/    
script:
  - g++ --version
  - if [ "$CXX" = "g++" ]; then export CXX="/usr/bin/g++-4.9" CC="gcc-4.9"; fi
  - if [ "$CXX" = "clang++" ]; then export CXX="/usr/bin/clang++-3.6" CC="clang-3.6"; fi
  - $CXX --version  
  - echo $CXX
  - which g++-4.9
  - ccache -s
  - pwd
  - ls -l $HOME
  - ls -l $HOME/build
  - ls -l $HOME/builds
  - mkdir -p build && cd build && cmake -DBamtools_PREFIX=${HOME}/build/bamtools/ .. #-DEIGEN3_INCLUDE_DIR=$HOME/include/ -DBOOST_INCLUDEDIR=$HOME .. && make
  - make 
cache:
    directories:
    - $HOME/lib/
    - $HOME/include/
    - $HOME/.ccache
#    - $HOME/build/
#    - $HOME/build/eigen
#    - $HOME/build/boost_install
